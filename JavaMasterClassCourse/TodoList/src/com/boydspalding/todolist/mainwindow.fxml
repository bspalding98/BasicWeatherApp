<?import javafx.geometry.Insets?>
<?import javafx.scene.layout.GridPane?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.control.ListView?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.control.ToolBar?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.control.Tooltip?>
<?import javafx.scene.control.ToggleButton?>
<BorderPane fx:id="mainBorderPane" fx:controller="com.boydspalding.todolist.Controller" xmlns:fx="http://javafx.com/fxml">
    <top>
        <VBox>
            <MenuBar>
                <Menu text="File">
                    <MenuItem text="New..." onAction="#showNewItemDialog"/>
                    <SeparatorMenuItem/>    <!-- This just adds a little separationg between the two menuItems on the UI-->
                    <MenuItem text="Exit" onAction="#handleExit"/>
                </Menu>
            </MenuBar>
            <ToolBar>
                <HBox>
                    <Button onAction="#showNewItemDialog">
                        <tooltip>
                            <Tooltip text="Add a New Todo Item"/>
                        </tooltip>
                        <graphic>
                            <ImageView>
                                <Image url="@/toolbarButtonGraphics/general/New24.gif"/>
                            </ImageView>
                        </graphic>
                    </Button>
                    <ToggleButton fx:id="filterToggleButton" text="Today's Items" onAction="#handleFilterButton">
                        <tooltip>
                            <Tooltip text="Button down: Show Today's items only. Button Up: Show all items"/>
                        </tooltip>
                    </ToggleButton>
                </HBox>
            </ToolBar>
        </VBox>
    </top>
    <left>
        <ListView fx:id="todoListView" onKeyPressed="#handleKeyPressed"> <!--this is a Control. onMouseclickedHandler was removed because we created a generic one in Controller class change() -->

        </ListView>
    </left>
    <center> <!-- adding textarea to center because we want the details area to use all the remaining space. and center gives all the remaining space.
                  Where right is just preferred width and fills only vertically.-->
<!--        <TextArea fx:id="itemDetailsTextArea"/> &lt;!&ndash; Only understand plaintext. Also this was in center so it was fill empty space and only this would show&ndash;&gt;-->
        <VBox>
            <TextArea fx:id="itemDetailsTextArea" VBox.vgrow="ALWAYS" wrapText="true"/> <!-- Means it displays all areas that isn't this one to preferred height, then gives the rest to this one (TextArea)??? Or it might be all except a TextArea always-->
            <HBox style="-fx-background-color: white"> <!-- probably better to just put it in VBox in this isntance-->
                <Label text="Due: ">
                    <font>
                        <Font name="Times New Roman bold" size="20"/>
                    </font>
                </Label>
                <Label fx:id="deadlineLabel">
                    <font>
                        <Font name="Times New Roman bold" size="20"/>
                    </font>
                </Label>
            </HBox>
        </VBox>
    </center>
<!--    BOTTOM REASON FOR NOT USING-->
<!--    The reason we didn't use out bottom is because the bottom and top go all the way across. So will cut off the list. and will be hard to position Due date in line with text-->
</BorderPane>